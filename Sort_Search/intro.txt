7. 정렬과 탐색
자료구조를 사용하는 이유는 효율적인 탐색과 정렬을 위함
 - 탐색(searching) : 자료 중 무엇인가를 찾는 작업
 - 정렬(sorting) : 데이터를 순서대로 재배열.

 ** 정렬(sorting)
  : 사물들 간 상호 비교가 가능해야힘
   - 비교할 수 있는 모든 속성들은 정렬의 기준
   - 정렬되지 않은 자료는 탐색의 효율이 크게 떨어진다
    ex) 알파벳 순서로 정렬된 사전에서 단어 찾기
   오름차순(ascending order) <-> 내림차순(descending order)

   레코드(Record) : 정렬시켜야 될 대상
   필드(field) : 레코드에 포함된 속성
   키 or 정렬 키(Key or sort key) : 정렬의 기준이 되는 필드
   ::: 정렬이란 레코들을 키의 순서로 재배열 하는 것

   * 구현 복잡도와 알고리즘 효율성에 따른 분류
   - 단순하지만, 비효율적인 방법 : 삽입 정렬, 선택 정렬, 버블 정렬 등
   - 복잡하지만, 효율적인 방법 : 퀵 정렬, 힙 정렬, 병합 정렬, 기수 정렬 등

   * 안정성(Stability) 에 따른 분류
   안정성 : 입력 데이터에 동일한 킷값을 갖는 레코드가 여러 개 존재할 경우,
            정렬 후에도 이들의 상대적 위치가 바뀌지 않는 다는 의미
   - 삽입 정렬, 버블 정렬, 병합 정렬 등


